#include<GL/glut.h>
#include<GL/glu.h>
#include<GL/gl.h>

GLfloat vertices[][3]={{-1,-1,-1},{1,-1,-1},{1,-1,1},{-1,-1,1},{-1,1,1},{-1,1,-1},{1,1,-1},{1,1,1}};
GLfloat colors[][3]={{1,0,0},{1,1,0},{0,1,0},{0,1,1},{0,0,1},{1,1,1},{0,0,0},{1,0,1}};

static float theta[]={0,0,0};
static int axis=2;

void init()
{
	glClearColor(1.0,1.0,1.0,0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(-2,2,-2,2,-10,10);
}

void polygon(int a, int b,int c,int d)
{
	glBegin(GL_POLYGON);
	
	glColor3fv(colors[a]);
	glVertex3fv(vertices[a]);

	glColor3fv(colors[b]);
	glVertex3fv(vertices[b]);

	glColor3fv(colors[c]);
	glVertex3fv(vertices[c]);

	glColor3fv(colors[d]);
	glVertex3fv(vertices[d]);
	glEnd();
}

void colorCube()
{
	polygon(0,1,2,3);
	polygon(4,5,6,7);
	polygon(0,3,4,5);
	polygon(1,2,7,6);
	polygon(0,1,6,5);
	polygon(2,3,4,7);
}

void display()
{
	glClear(GL_COLOR_BUFFER_BIT|GL_DEPTH_BUFFER_BIT);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	glRotatef(theta[0],1,0,0);
	glRotatef(theta[1],0,1,0);
	glRotatef(theta[2],0,0,1);
	colorCube();
	theta[axis]+=1.0;
	if(theta[axis]>360) theta[axis]-=360;
	glutSwapBuffers();
}

void mouse(int stn,int state,int x,int y)
{
	if(stn==GLUT_LEFT_BUTTON && state==GLUT_DOWN) axis=0;
	if(stn==GLUT_MIDDLE_BUTTON && state==GLUT_DOWN) axis=1;
	if(stn==GLUT_RIGHT_BUTTON && state==GLUT_DOWN) axis=2;
}

int main(int argc,char **argv)
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_DOUBLE|GLUT_RGB|GLUT_DEPTH);
	glutInitWindowSize(500,500);
	glutCreateWindow("Spinning of cube");
	init();
	glutDisplayFunc(display);
	glutIdleFunc(display);
	glutMouseFunc(mouse);
	glEnable(GL_DEPTH_TEST);
	glutMainLoop();
	return 0;
}
