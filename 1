#include<stdio.h>
#include<GL/glut.h>
#include<GL/glu.h>
#include<GL/gl.h>

GLint x1,x2,y1,y2;

void init()
{
	glClearColor(1.0,0.0,0.0,1.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0,500,0,500);
}

void draw_pixel(GLint x,GLint y)
{
	glPointSize(3);
	glBegin(GL_POINTS);
	glVertex2i(x,y);
	glEnd();
}

void draw_line(GLint x1, GLint y1, GLint x2, GLint y2)
{
	GLint dx,dy,e,i;
	GLint incx,incy,inc1,inc2;
	GLint x,y;

	dx=x2-x1;
	if(dx<0) dx=-dx;
	dy=y2-y1;
	if(dy<0) dy=-dy;
	incx=1;
	if(x2<x1) incx=-1;
	incy=1;
	if(y2<y1) incy=-1;

	x=x1;
	y=y1;

	if(dx>dy)
	{
		draw_pixel(x,y);
		e=2*dy-dx;
		inc1=2*dy;
		inc2=2*(dy-dx);
		for(i=1;i<dx;i++)
		{
			if(e>=0)
			{
				y+=incy;
				e+=inc2;
			}
			else
				e+=inc1;
			x+=incx;
			draw_pixel(x,y);
		}
	}
	else
	{
		draw_pixel(x,y);
		e=2*dx-dy;
		inc1=2*dx;
		inc2=2*(dx-dy);
		for(i=1;i<dx;i++)
		{
			if(e>=0)
			{
				x+=incx;
				e+=inc2;
			}
			else
				e+=inc1;
			y+=incy;
			draw_pixel(x,y);
		}
	}
}

void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	draw_line(x1,y1,x2,y2);
	glFlush();
}


int main(int argc,char **argv)
{
	printf("Enter (x1,y1,x2,y2): ");
	scanf("%d %d %d %d",&x1,&y1,&x2,&y2);
	glutInit(&argc,argv);
	glutInitWindowSize(500,500);
	glutCreateWindow("BRESENHAM'S LINE DRAWING");
	init();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
